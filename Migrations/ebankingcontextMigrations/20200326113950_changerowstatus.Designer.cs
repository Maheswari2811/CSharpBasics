// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace generics.Migrations.ebankingcontextMigrations
{
    [DbContext(typeof(ebankingcontext))]
    [Migration("20200326113950_changerowstatus")]
    partial class changerowstatus
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Customer", b =>
                {
                    b.Property<Guid>("CustomerUid")
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newsequentialid())");

                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<Guid>("RowStatusUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("01000000-0000-0000-0000-000000000000"));

                    b.HasKey("CustomerUid")
                        .HasName("PK_Customer_CustomerUid");

                    b.HasIndex("RowStatusUid")
                        .IsUnique();

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("CustomerDetails", b =>
                {
                    b.Property<Guid>("CustomerDetailsUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newsequentialid())");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(1000);

                    b.Property<int>("CustomerDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("CustomerUid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(28)")
                        .HasMaxLength(14);

                    b.Property<Guid>("RowStatusUid")
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("01000000-0000-0000-0000-000000000000"));

                    b.HasKey("CustomerDetailsUid")
                        .HasName("PK_CustomerDetails_CustomerDetailsUid");

                    b.HasIndex("RowStatusUid")
                        .IsUnique();

                    b.ToTable("CustomerDetails");
                });

            modelBuilder.Entity("RowStatus", b =>
                {
                    b.Property<Guid>("RowstatusUid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("RowStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("RowstatusUid")
                        .HasName("PK_RowStatus_RowStatusUid");

                    b.ToTable("RowStatus");
                });

            modelBuilder.Entity("Customer", b =>
                {
                    b.HasOne("CustomerDetails", "CustomerDetails")
                        .WithOne("Customer")
                        .HasForeignKey("Customer", "CustomerUid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RowStatus", "RowStatus")
                        .WithOne("customer")
                        .HasForeignKey("Customer", "RowStatusUid")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("CustomerDetails", b =>
                {
                    b.HasOne("RowStatus", "RowStatus")
                        .WithOne("CustomerDetails")
                        .HasForeignKey("CustomerDetails", "RowStatusUid")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
